version: '3.9'

services:

  customer-api:
    image: customer-api:0.0.1-SNAPSHOT
    container_name: customer-api
    ports:
      - 8080:8080
    environment:
      WAIT_HOSTS: postgres:5432
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-server:5432/postgres
    depends_on:
      - postgres-server
      - kafka-server
      - connect-server
    command: [--rm]

  cdc-listener:
    image: cdc-listener:0.0.1-SNAPSHOT
    container_name: cdc-listener
    ports:
      - 8084:8084
    depends_on:
      - customer-api
    command: [--rm]

  postgres-server:

    image: debezium/postgres:13-alpine
    container_name: postgres-server
    hostname: postgres-server
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  zookeeper-server:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper-server
    container_name: zookeeper-server
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-server:
    image: confluentinc/cp-server:6.1.1
    hostname: kafka-server
    container_name: kafka-server
    depends_on:
      - zookeeper-server
    ports:
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-server:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-server:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry-server:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-server:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

  connect-server:
    image: cnfldemos/cp-server-connect-datagen:0.4.0-6.1.0
    hostname: connect-server
    container_name: connect-server
    depends_on:
      - kafka-server
      - schema-registry-server
    ports:
      - 8083:8083
    volumes:
      - /docker-volumes/confluent-connector:/data
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-server:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-server
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: my-connect-config-storage-topic
      CONNECT_OFFSET_STORAGE_TOPIC: my-connect-offset-storage-topic
      CONNECT_STATUS_STORAGE_TOPIC: my-connect-status-storage-topic
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-server:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.1.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components,/data/connectors/debezium-connector-postgresql'
      CONNECT_LOG4J_LOGGERS: 'org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR'

  schema-registry-server:
    image: confluentinc/cp-schema-registry:6.1.1
    hostname: schema-registry-server
    container_name: schema-registry-server
    depends_on:
      - kafka-server
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-server
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-server:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  control-center-server:
    image: confluentinc/cp-enterprise-control-center:6.1.1
    hostname: control-center-server
    container_name: control-center-server
    depends_on:
      - kafka-server
      - connect-server
      - schema-registry-server
      - ksqldb-server
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-server:29092
      CONTROL_CENTER_CONNECT_CLUSTER: connect-server:8083
      CONTROL_CENTER_KSQL_KSQLDB1_URL: http://ksqldb-server:8088
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: http://localhost:8088
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry-server:8081
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.1.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka-server
      - connect-server
    ports:
      - 8088:8088
    environment:
      KSQL_CONFIG_DIR: /etc/ksql
      KSQL_BOOTSTRAP_SERVERS: kafka-server:29092
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry-server:8081
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      KSQL_KSQL_CONNECT_URL: http://connect-server:8083
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.1.1
    container_name: ksqldb-cli
    depends_on:
      - kafka-server
      - connect-server
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    image: confluentinc/ksqldb-examples:6.1.1
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - kafka-server
      - connect-server
      - schema-registry-server
      - ksqldb-server
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka-server:29092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry-server 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: /etc/ksql
      STREAMS_BOOTSTRAP_SERVERS: kafka-server:29092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry-server
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  rest-proxy-server:
    image: confluentinc/cp-kafka-rest:6.1.1
    depends_on:
      - kafka-server
      - schema-registry-server
    ports:
      - 8082:8082
    hostname: rest-proxy-server
    container_name: rest-proxy-server
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy-server
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka-server:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-server:8081
